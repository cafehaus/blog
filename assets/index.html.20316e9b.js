import{h as n}from"./app.c91e4ae6.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u7528\u6709\u9650\u72B6\u6001\u673A\u5B9E\u73B0\u4E00\u4E2A\u7B80\u7248-html-\u89E3\u6790\u5668" tabindex="-1"><a class="header-anchor" href="#\u7528\u6709\u9650\u72B6\u6001\u673A\u5B9E\u73B0\u4E00\u4E2A\u7B80\u7248-html-\u89E3\u6790\u5668" aria-hidden="true">#</a> \u7528\u6709\u9650\u72B6\u6001\u673A\u5B9E\u73B0\u4E00\u4E2A\u7B80\u7248 html \u89E3\u6790\u5668</h1><p>FSM(Finite State Machines) \u6709\u9650\u72B6\u6001\u673A\uFF0C\u4E5F\u53EB\u6709\u9650\u72B6\u6001\u81EA\u52A8\u673A\uFF0C\u662F\u4E3A\u7814\u7A76\u6709\u9650\u5185\u5B58\u7684\u8BA1\u7B97\u8FC7\u7A0B\u548C\u67D0\u4E9B\u8BED\u8A00\u7C7B\u800C\u62BD\u8C61\u51FA\u7684\u4E00\u79CD\u8BA1\u7B97\u6A21\u578B\uFF0C\u5B83\u62E5\u6709\u6709\u9650\u4E2A\u6570\u91CF\u7684\u72B6\u6001\uFF0C\u6BCF\u4E2A\u72B6\u6001\u53EF\u4EE5\u8FC1\u79FB\u5230\u96F6\u4E2A\u6216\u591A\u4E2A\u72B6\u6001\uFF0C\u8F93\u5165\u5B57\u4E32\u51B3\u5B9A\u6267\u884C\u54EA\u4E2A\u72B6\u6001\u7684\u8FC1\u79FB\u3002</p><h2 id="\u6709\u9650\u72B6\u6001\u673A\u6709\u4EC0\u4E48\u7528" tabindex="-1"><a class="header-anchor" href="#\u6709\u9650\u72B6\u6001\u673A\u6709\u4EC0\u4E48\u7528" aria-hidden="true">#</a> \u6709\u9650\u72B6\u6001\u673A\u6709\u4EC0\u4E48\u7528</h2><p>\u4EE3\u7801\u7F16\u8BD1\u5668\u5728\u5DE5\u4F5C\u65F6\u5C31\u9700\u8981\u901A\u8FC7\u8BCD\u6CD5\u5206\u6790\u3001\u8BED\u6CD5\u5206\u6790\u3001\u8BED\u4E49\u5206\u6790\u6765\u5F97\u5230 AST(Abtract Syntaxt Tree) \u62BD\u8C61\u8BED\u6CD5\u6811\u3002\u9700\u8981\u5148\u8BCD\u6CD5\u5206\u6790\u62FF\u5230\u7684\u6240\u6709 token \u6D41\uFF0C\u63A5\u7740\u901A\u8FC7\u8BED\u6CD5\u5206\u6790\u5C06 token \u6D41\u8FDB\u884C\u6587\u6CD5\u6821\u9A8C\u751F\u6210\u8BED\u6CD5\u89E3\u6790\u6811\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u4E00\u822C\u6709\u4E24\u79CD\uFF1A</p><ul><li>\u8FB9\u5206\u8BCD\u8FB9\u751F\u6210 AST\uFF0C\u50CF\u89E3\u6790 HTML\u3001CSS</li><li>\u5148\u5206\u8BCD\u751F\u6210\u6240\u6709 token\uFF0C\u518D\u6765\u8FDB\u884C\u8BED\u6CD5\u5206\u6790\u751F\u6210 AST\uFF0C\u50CF js</li></ul><p>\u6211\u4EEC\u5728\u524D\u7AEF\u5DE5\u4F5C\u4E2D\u7ECF\u5E38\u7528\u5230\u7684\uFF1Ababel\u3001typescript\u3001eslint\u3001postcss\u3001prettier\u3001uniapp\u3001htmlparse\u3001\u4EE3\u7801\u7F16\u8F91\u5668\u7684\u8BED\u6CD5\u9AD8\u4EAE...\u8FD9\u4E9B\u5176\u5B9E\u90FD\u662F\u57FA\u4E8E AST \u62BD\u8C61\u8BED\u6CD5\u6811\u6765\u5B9E\u73B0\u7684\uFF0C\u800C\u4E3A\u4E86\u5F97\u5230 AST \u6211\u4EEC\u9700\u8981\u5148\u8FDB\u884C\u5206\u8BCD\uFF0C\u800C\u5206\u8BCD\u4E00\u4E2A\u6BD4\u8F83\u597D\u7684\u65B9\u5F0F\u5C31\u662F\u901A\u8FC7\u6709\u9650\u72B6\u6001\u673A\u6765\u5B9E\u73B0\u3002</p><p>\u4EE3\u7801\u7684\u672C\u8D28\u5C31\u662F\u5B57\u7B26\u4E32\uFF0C\u5206\u8BCD\u5C31\u662F\u628A\u4EE3\u7801\u5B57\u7B26\u4E32\u53D8\u6210\u4E00\u4E2A\u4E2A\u6700\u5C0F\u5355\u5143\u5230\u4E0D\u80FD\u518D\u62C6\u5206\u7684\u5355\u8BCD\uFF0C\u4E5F\u53EB token(\u6CE8\u610F\u4E0D\u662F\u54B1\u4EEC\u5E73\u65F6\u7528\u5230\u7684\u767B\u5F55\u6001 token)\uFF0C\u5206\u8BCD\u5668\u7684\u82F1\u6587 tokenizer\u3002\u4EE3\u7801\u5176\u5B9E\u8DDF\u6211\u4EEC\u4E00\u7BC7\u82F1\u6587\u6587\u7AE0\u3001\u4E00\u9996\u4E2D\u6587\u53E4\u8BD7\u3001\u4E00\u4E2A\u6570\u5B66\u8FD0\u7B97...\u90FD\u662F\u4E00\u6837\u7684\uFF0C\u6211\u4EEC\u4E00\u6837\u53EF\u4EE5\u7528\u5206\u8BCD\u6280\u672F\u6765\u62C6\u5206\u8FD9\u4E9B\u5143\u7D20\u3002</p><h2 id="\u6709\u9650\u72B6\u6001\u673A\u662F\u600E\u4E48\u5DE5\u4F5C\u7684" tabindex="-1"><a class="header-anchor" href="#\u6709\u9650\u72B6\u6001\u673A\u662F\u600E\u4E48\u5DE5\u4F5C\u7684" aria-hidden="true">#</a> \u6709\u9650\u72B6\u6001\u673A\u662F\u600E\u4E48\u5DE5\u4F5C\u7684</h2><p>\u4E3A\u4E86\u7406\u89E3\u6709\u9650\u72B6\u6001\u673A\u5230\u5E95\u662F\u600E\u4E48\u5DE5\u4F5C\u7684\uFF0C\u6211\u4EEC\u5148\u6765\u5B9E\u73B0\u4E00\u4E2A\u7B80\u5355\u7684\u51CF\u6CD5\u8FD0\u7B97\u5206\u8BCD\u3002\u8981\u6C42\u7528\u72B6\u6001\u673A\u628A 500-250=250 \u8FD9\u4E2A\u51CF\u6CD5\u8FD0\u7B97\u5206\u8BCD\u6210\u4E00\u4E2A\u6570\u7EC4\uFF0C\u9996\u5148\u5B9A\u4E49\u4E00\u5171\u67092\u79CD\u72B6\u6001\uFF1Anumber-\u6570\u5B57\u3001operator-\u8FD0\u7B97\u7B26\uFF0C\u6BCF\u4E00\u4E2A\u6700\u5C0F\u7684 token \u53EA\u80FD\u662F\u8FD9\u4E24\u4E2A\u5F53\u4E2D\u7684\u4E00\u4E2A\uFF0C\u4EE3\u7801\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 500-250=250</span>
<span class="token comment">// [</span>
<span class="token comment">//   { type: &#39;number&#39;, value: &#39;500&#39; },</span>
<span class="token comment">//   { type: &#39;operator&#39;, value: &#39;-&#39; },</span>
<span class="token comment">//   { type: &#39;number&#39;, value: &#39;250&#39; },</span>
<span class="token comment">//   { type: &#39;operator&#39;, value: &#39;=&#39; },</span>
<span class="token comment">//   { type: &#39;number&#39;, value: &#39;250&#39; }</span>
<span class="token comment">// ]</span>

<span class="token keyword">function</span> <span class="token function">mathTokenizer</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5339\u914D\u6570\u5B57\u6B63\u5219</span>
  <span class="token keyword">const</span> numberReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[0-9]</span><span class="token regex-delimiter">/</span></span>
  <span class="token comment">// \u5339\u914D\u8FD0\u7B97\u7B26\u6B63\u5219</span>
  <span class="token keyword">const</span> operatorReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[-=]</span><span class="token regex-delimiter">/</span></span>
  <span class="token comment">// \u5B58\u50A8\u6240\u6709\u8BFB\u53D6\u5230\u7684 token \u6570\u7EC4</span>
  <span class="token keyword">let</span> tokens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5F53\u524D\u6B63\u5728\u8BFB\u53D6\u7684 token \u4FE1\u606F</span>
  <span class="token keyword">let</span> currentToken <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token comment">// \u521D\u59CB\u72B6\u6001</span>
  <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numberReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      currentToken <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> e <span class="token punctuation">}</span>
      <span class="token keyword">return</span> onNumber
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>operatorReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      currentToken <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;operator&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> e <span class="token punctuation">}</span>
      <span class="token keyword">return</span> onOperator
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BFB\u53D6\u5230\u6570\u5B57</span>
  <span class="token keyword">function</span> <span class="token function">onNumber</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numberReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      currentToken<span class="token punctuation">.</span>value <span class="token operator">+=</span> e
      <span class="token keyword">return</span> onNumber
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>operatorReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">pushToken</span><span class="token punctuation">(</span>currentToken<span class="token punctuation">)</span>
      currentToken <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;operator&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> e <span class="token punctuation">}</span>
      <span class="token keyword">return</span> onOperator
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BFB\u53D6\u5230\u8FD0\u7B97\u7B26</span>
  <span class="token keyword">function</span> <span class="token function">onOperator</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numberReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">pushToken</span><span class="token punctuation">(</span>currentToken<span class="token punctuation">)</span>
      currentToken <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> e <span class="token punctuation">}</span>
      <span class="token keyword">return</span> onNumber
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>operatorReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">pushToken</span><span class="token punctuation">(</span>currentToken<span class="token punctuation">)</span>
      currentToken <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;operator&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> e <span class="token punctuation">}</span>
      <span class="token keyword">return</span> onOperator
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6BCF\u6B21\u8BFB\u53D6\u5230\u5B8C\u6574\u7684\u4E00\u4E2A token \u540E\u5B58\u5165\u5230\u6570\u7EC4\u4E2D</span>
  <span class="token keyword">function</span> <span class="token function">pushToken</span><span class="token punctuation">(</span><span class="token parameter">token</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>
    currentToken <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u904D\u5386\u8BFB\u53D6\u6570\u7EC4</span>
  <span class="token keyword">function</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span>length
    <span class="token keyword">let</span> stateMachine <span class="token operator">=</span> init
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> char <span class="token operator">=</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      stateMachine <span class="token operator">=</span> <span class="token function">stateMachine</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span>

      <span class="token comment">// \u6700\u540E\u4E00\u4E2A\u5B57\u7B26\u5339\u914D\u5B8C\u4E86\u8981\u81EA\u5DF1 pushToken</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">pushToken</span><span class="token punctuation">(</span>currentToken<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> tokens
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">parse</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">mathTokenizer</span><span class="token punctuation">(</span><span class="token string">&#39;500-250=250&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><h2 id="\u7B80\u7248\u7684-html-\u89E3\u6790\u5668" tabindex="-1"><a class="header-anchor" href="#\u7B80\u7248\u7684-html-\u89E3\u6790\u5668" aria-hidden="true">#</a> \u7B80\u7248\u7684 html \u89E3\u6790\u5668</h2><h3 id="\u8BCD\u6CD5\u5206\u6790-\u751F\u6210-token-\u6D41" tabindex="-1"><a class="header-anchor" href="#\u8BCD\u6CD5\u5206\u6790-\u751F\u6210-token-\u6D41" aria-hidden="true">#</a> \u8BCD\u6CD5\u5206\u6790\uFF0C\u751F\u6210 token \u6D41</h3><p>\u5229\u7528\u72B6\u6001\u673A\u6765\u751F\u6210 token \u6D41\uFF0C\u4E3A\u4E86\u65B9\u4FBF\u7406\u89E3\u4EE5\u4E0B\u793A\u4F8B\u4E0D\u8003\u8651\u6807\u7B7E\u5C5E\u6027\u8282\u70B9\u3001\u81EA\u95ED\u5408\u6807\u7B7E\u548C\u4E00\u4E9B\u5F02\u5E38\u60C5\u51B5\u3002</p><p>\u6211\u4EEC\u5148\u5B9A\u4E495\u4E2A\u72B6\u6001\uFF1A\u6807\u7B7E\u5F00\u59CB\u3001\u7ED3\u675F\u6807\u7B7E\u5F00\u59CB\u3001\u6807\u7B7E\u540D\u3001\u6807\u7B7E\u7ED3\u675F\u3001\u6587\u672C\uFF0C\u6BCF\u6B21\u8BFB\u53D6\u5230\u7684\u5185\u5BB9\u4F1A\u5728\u8FD95\u4E2A\u72B6\u6001\u4E4B\u95F4\u5207\u6362\uFF0C\u6BCF\u6B21\u8BFB\u53D6\u65F6\u53EA\u8981\u4E0D\u662F\u6807\u7B7E\u5F00\u59CB\u3001\u7ED3\u675F\u6807\u7B7E\u5F00\u59CB\u3001\u6807\u7B7E\u540D\u3001\u6807\u7B7E\u7ED3\u675F\u8FD94\u4E2A\u72B6\u6001\u7684\u6211\u4EEC\u90FD\u5F53\u6210\u6587\u672C\u6765\u5904\u7406\u3002</p><p>\u5B9E\u9645\u4E0A\u6211\u4EEC\u53EA\u9700\u8981\u5B58\u50A8\uFF1A\u5F00\u59CB\u6807\u7B7E\u3001\u6587\u672C\u3001\u7ED3\u675F\u6807\u7B7E\u8FD93\u4E2A\u72B6\u6001\uFF0C\u6240\u4EE5\u5B9A\u4E49\u7684\u8282\u70B9 type \u5206\u522B\u4E3A\uFF1AstartTag\u3001text\u3001endTag\u3002\u4F60\u8981\u6309\u524D\u9762\u5B9A\u4E49\u76845\u4E2A\u72B6\u6001\u6765\u50A8\u5B58\u5176\u5B9E\u4E5F\u662F\u53EF\u4EE5\u7684\uFF0C\u5728\u4E0B\u9762\u751F\u6210 AST \u76F4\u63A5\u5FFD\u7565\u6389\u6211\u4EEC\u4E0D\u9700\u8981\u7684\u6807\u7B7E\u5F00\u59CB\u3001\u6807\u7B7E\u7ED3\u675F\u8FD9\u4E9B\u72B6\u6001\u4FE1\u606F\u5C31\u884C\u4E86\uFF0C\u53EA\u4E0D\u8FC7\u8FD9\u91CC\u6211\u4EEC\u76F4\u63A5\u5728\u5206\u8BCD\u8FD9\u4E00\u6B65\u63D0\u524D\u5C31\u7ED9\u8FC7\u6EE4\u4E86\u3002</p><p>\u8FD9\u91CC\u6211\u4EEC\u53EF\u4EE5\u628A\u72B6\u6001\u673A\u7406\u89E3\u6210\u4E00\u4E2A\u51FD\u6570\uFF0C\u6BCF\u904D\u5386\u5230\u4E00\u4E2A\u5B57\u7B26\u6211\u4EEC\u90FD\u5C06\u8FD9\u4E2A\u5B57\u7B26\u4F20\u5230\u51FD\u6570\u4E2D\uFF0C\u800C\u51FD\u6570\u4E2D\u53EF\u4EE5\u6839\u636E\u8FD9\u4E2A\u5B57\u7B26\u6765\u5224\u65AD\u4E0B\u4E00\u4E2A\u72B6\u6001\u662F\u4EC0\u4E48\uFF0C\u518D\u8FD4\u56DE\u51FA\u53BB\u4E0B\u4E00\u4E2A\u72B6\u6001\u51FD\u6570\u5C31\u884C\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">htmlTokenizer</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \u6807\u7B7E\u5F00\u59CB</span>
  <span class="token keyword">const</span> tagStartReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;</span><span class="token regex-delimiter">/</span></span>
  <span class="token comment">// \u7ED3\u675F\u6807\u7B7E\u5F00\u59CB</span>
  <span class="token keyword">const</span> closeTagReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/</span><span class="token regex-delimiter">/</span></span>
  <span class="token comment">// \u6807\u7B7E\u7ED3\u675F</span>
  <span class="token keyword">const</span> tagEndReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&gt;</span><span class="token regex-delimiter">/</span></span>
  <span class="token comment">// \u6807\u7B7E\u540D</span>
  <span class="token keyword">const</span> tagNameReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-zA-Z]</span><span class="token regex-delimiter">/</span></span>

	<span class="token keyword">let</span> tokens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
	<span class="token keyword">let</span> currentToken <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token comment">// \u521D\u59CB\u72B6\u6001</span>
  <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tagStartReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      currentToken <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;startTag&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">tagName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span>
			<span class="token keyword">return</span> init
		<span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>closeTagReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      currentToken <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;endTag&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">tagName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span>
			<span class="token keyword">return</span> onTagName
		<span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tagNameReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      currentToken<span class="token punctuation">.</span>tagName <span class="token operator">+=</span> e
			<span class="token keyword">return</span> onTagName
		<span class="token punctuation">}</span>

    <span class="token comment">// \u4E0D\u662F\u4E0A\u97623\u4E2A\u72B6\u6001\u7684\u90FD\u5F53\u6210\u6587\u672C\u8282\u70B9\u5904\u7406</span>
    currentToken <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> e <span class="token punctuation">}</span>
    <span class="token keyword">return</span> onText
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BFB\u53D6\u5230\u6807\u7B7E\u540D</span>
  <span class="token keyword">function</span> <span class="token function">onTagName</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tagEndReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">pushToken</span><span class="token punctuation">(</span>currentToken<span class="token punctuation">)</span>
			<span class="token keyword">return</span> init
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      currentToken<span class="token punctuation">.</span>tagName <span class="token operator">=</span> <span class="token punctuation">(</span>currentToken<span class="token punctuation">.</span>tagName <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> e
			<span class="token keyword">return</span> onTagName
		<span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BFB\u53D6\u5230\u6587\u672C</span>
  <span class="token keyword">function</span> <span class="token function">onText</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tagStartReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">pushToken</span><span class="token punctuation">(</span>currentToken<span class="token punctuation">)</span>
      currentToken <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;startTag&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">tagName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span>
			<span class="token keyword">return</span> init
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      currentToken<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token punctuation">(</span>currentToken<span class="token punctuation">.</span>text <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> e
			<span class="token keyword">return</span> onText
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6BCF\u6B21\u8BFB\u53D6\u5230\u5B8C\u6574\u7684\u4E00\u4E2A token \u540E\u5B58\u5165\u5230\u6570\u7EC4\u4E2D</span>
	<span class="token keyword">function</span> <span class="token function">pushToken</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
		currentToken <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

  <span class="token comment">// \u904D\u5386\u8BFB\u53D6\u6570\u7EC4</span>
  <span class="token keyword">function</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token parameter">chars</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> stateMachine <span class="token operator">=</span> init
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> char <span class="token keyword">of</span> chars<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			stateMachine <span class="token operator">=</span> <span class="token function">stateMachine</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> tokens
	<span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">parse</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> tokenList <span class="token operator">=</span> <span class="token function">htmlTokenizer</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;div&gt;\u9759\u591C\u601D&lt;p&gt;\u9504\u79BE\u65E5\u5F53\u5348&lt;/p&gt;\u5468\u5C0F\u9ED1&lt;p&gt;\u7C92\u7C92\u7686\u8F9B\u82E6&lt;/p&gt;\u516C\u5143\u4E00\u4E03\u516B\u516B\u5E74&lt;/div&gt;&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tokenList<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br></div></div><h3 id="\u8BED\u6CD5\u5206\u6790-\u751F\u6210-ast-\u62BD\u8C61\u8BED\u6CD5\u6811" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5\u5206\u6790-\u751F\u6210-ast-\u62BD\u8C61\u8BED\u6CD5\u6811" aria-hidden="true">#</a> \u8BED\u6CD5\u5206\u6790\uFF0C\u751F\u6210 AST \u62BD\u8C61\u8BED\u6CD5\u6811</h3><p>\u8FD9\u4E00\u6B65\u4E3B\u8981\u5C31\u600E\u4E48\u80FD\u628A\u5206\u8BCD\u5F97\u5230\u7684\u6570\u7EC4\u8F6C\u6362\u6210\u6811\u5F62 tree \u6570\u636E\u7ED3\u6784\uFF0C\u65E5\u5E38\u5F00\u53D1\u4E2D\u6211\u4EEC array \u8F6C tree \u4E00\u822C\u90FD\u662F\u9700\u8981\u6839\u636E\u7236\u4EB2 id \u4E4B\u7C7B\u7684\u6765\u5B9E\u73B0\u904D\u5386\u751F\u6210\uFF0C\u4F46\u662F\u8FD9\u91CC\u54B1\u62FF\u5230\u7684\u6570\u7EC4\u662F\u6CA1\u6709\u8FD9\u4E2A\u7236 id \u7684\uFF0C\u90A3\u8981\u600E\u4E48\u5B9E\u73B0\u5462\uFF1F</p><p>\u5148\u89C2\u5BDF\u6570\u636E\u7ED3\u6784\uFF0C\u867D\u7136\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F46\u662F\u8FD9\u4E2A\u6570\u7EC4\u5176\u5B9E\u662F\u4E2A\u7C7B\u4F3C\u4E2D\u5FC3\u5BF9\u79F0\u7ED3\u6784\u7684\uFF0C\u6211\u4EEC\u6682\u65F6\u5148\u5FFD\u7565\u6389\u6570\u7EC4\u91CC\u7684 type \u4E3A text \u7684\u6587\u672C\u5185\u5BB9(\u56E0\u4E3A\u8FD9\u4E2A\u5176\u5B9E\u6211\u4EEC\u662F\u4E0D\u80FD\u628A\u5B83\u5F53\u6210\u4E00\u4E2A\u7236\u8282\u70B9\u7684\uFF0C\u5B83\u53EA\u80FD\u662F\u67D0\u4E2A\u6807\u7B7E\u7684\u5B50\u8282\u70B9)\uFF0C\u8FC7\u6EE4\u6389\u6587\u672C\u540E\u6570\u7EC4\u7B2C1\u4E2A\u5143\u7D20\u548C\u6700\u540E1\u4E2A\u5143\u7D20\u6B63\u597D\u662F1\u5BF9\uFF0C\u7B2C2\u4E2A\u5143\u7D20\u548C\u5012\u6570\u7B2C2\u4E2A\u5143\u7D20\u53C8\u662F1\u5BF9\uFF0C\u6211\u4EEC\u8981\u5B9E\u73B0\u7684\u5C31\u662F\u628A\u5185\u5C42\u83B7\u53D6\u5230\u7684\u4E00\u5BF9\u5BF9\u6807\u7B7E\u4E0D\u65AD\u6302\u8F7D\u5230\u5B83\u524D\u9762\u4E00\u5BF9\u7B7E\u7684 children \u5C5E\u6027\u4E0A\u6765\u5B9E\u73B0 tree \u7ED3\u6784\u3002</p><p>\u90A3\u6211\u4EEC\u53EF\u4EE5\u4ECE\u6570\u7EC4\u7B2C\u4E00\u9879\u76EE\u5F00\u59CB\u904D\u5386\uFF0C\u7136\u540E\u7528\u4E00\u4E2A\u6570\u7EC4\u6765\u6A21\u62DF stack \u6808\u5B58\u6BCF\u6B21\u904D\u5386\u5230\u7684\u6807\u7B7E\u4FE1\u606F(\u6808\u7684\u7279\u70B9\u662F\u5148\u8FDB\u540E\u51FA\uFF0C\u7C7B\u4F3C\u6211\u4EEC\u5F80\u4E00\u4E2A\u6876\u91CC\u653E\u4E1C\u897F\uFF0C\u653E\u5728\u6700\u4E0A\u9762\u7684\u53EF\u4EE5\u6700\u5148\u62FF\u51FA\u6765\uFF0C\u89C4\u5B9A\u6570\u7EC4\u53EA\u80FD\u4F7F\u7528 push \u548C pop \u5C31\u80FD\u6A21\u62DF\u6808\u4E86)\u3002</p><p>\u5F53\u9047\u5230\u5F00\u59CB\u6807\u7B7E\u7684\u65F6\u5019\u5C31\u8BF4\u660E\u9047\u5230\u4E00\u4E2A\u65B0\u7684\u6807\u7B7E\u4E86\uFF0C\u8FD9\u65F6\u5C31\u5F80\u6808\u91CC push \u8FDB\u53BB\uFF0C\u5F53\u9047\u5230\u7ED3\u675F\u6807\u7B7E\u65F6\u5C31\u8BF4\u660E\u5F53\u524D\u8FD9\u4E2A\u6807\u7B7E\u7684\u6240\u6709\u4FE1\u606F\u90FD\u5DF2\u7ECF\u8BFB\u53D6\u5904\u7406\u5B8C\u4E86\uFF0C\u90A3\u6211\u4EEC\u5C31\u53EF\u4EE5\u5C06\u5B83\u4ECE\u6808\u91CC\u5F39\u51FA\u6765\uFF0C\u7136\u540E\u73B0\u5728\u6808\u91CC\u6700\u4E0A\u9762\u7684\u4E00\u4E2A\u5143\u7D20\u5176\u5B9E\u5C31\u662F\u5F53\u524D\u5F39\u51FA\u6765\u7684\u7236\u6807\u7B7E\u4E86\uFF0C\u76F4\u63A5\u6302\u8F7D\u5230 children \u4E0A\u5C31\u884C\u4E86\u3002\u6574\u4E2A\u8FC7\u7A0B\u5176\u5B9E\u4E3B\u8981\u5C31\u662F\u7406\u89E3\u4E0B\u97622\u70B9\uFF1A</p><ul><li>\u7528\u6808\u6765\u7F13\u5B58\u8282\u70B9\uFF1A\u5D4C\u5957\u5728\u5185\u90E8\u7684\u8282\u70B9\u5C31\u53EF\u4EE5\u5148\u51FA\u6808\uFF0C\u6839\u8282\u70B9\u6700\u540E\u51FA\u6808</li><li>\u7528\u5F15\u7528\u7C7B\u578B\u5BF9\u8C61\u7684\u7279\u70B9\uFF0C\u6765\u4E0D\u65AD\u6302\u8F7D\u8282\u70B9</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">htmlAst</span><span class="token punctuation">(</span><span class="token parameter">tokenList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tokenList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> node <span class="token operator">=</span> tokenList<span class="token punctuation">[</span>i<span class="token punctuation">]</span>

    <span class="token comment">// \u5F00\u59CB\u6807\u7B7E\uFF1A\u5165\u6808</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;startTag&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

    <span class="token comment">// \u7ED3\u675F\u6807\u7B7E\uFF1A\u51FA\u6808</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;endTag&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> currentNode <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token keyword">const</span> parent <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>parent<span class="token punctuation">.</span>children<span class="token punctuation">)</span> parent<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        parent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>currentNode<span class="token punctuation">)</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;document&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>currentNode<span class="token punctuation">]</span> <span class="token punctuation">}</span>
				<span class="token keyword">return</span> root
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

    <span class="token comment">// \u6587\u672C\uFF1A\u52A0\u5230\u7236\u6807\u7B7E\u7684 children \u4E0A</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> parent <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>parent<span class="token punctuation">.</span>children<span class="token punctuation">)</span> parent<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      parent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u7136\u540E\u5C31\u80FD\u62FF\u5230\u6211\u4EEC\u9700\u8981\u7684 AST \u8BED\u6CD5\u6811\u4E86\uFF0C\u7ED3\u6784\u5982\u4E0B\uFF1A</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;document&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;startTag&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tagName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u9759\u591C\u601D&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;startTag&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;tagName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u9504\u79BE\u65E5\u5F53\u5348&quot;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u5468\u5C0F\u9ED1&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;startTag&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;tagName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u7C92\u7C92\u7686\u8F9B\u82E6&quot;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u516C\u5143\u4E00\u4E03\u516B\u516B\u5E74&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><p>\u7406\u89E3\u4E86\u72B6\u6001\u673A\u5C31\u5982\u7ED9\u4F60\u6309\u4E0A\u4E86\u4E00\u53CC\u7FC5\u8180\uFF0C\u4E0D\u7BA1\u7ED9\u4F60\u4EFB\u4F55\u4E00\u6BB5\u5B57\u7B26\u4EFB\u5BB9\uFF0C\u90FD\u53EF\u4EE5\u901A\u8FC7\u72B6\u6001\u673A\u6765\u62C6\u5206\u6210\u6211\u4EEC\u60F3\u8981\u7684\u7ED3\u6784\uFF0C\u7406\u89E3\u4E86\u4E0A\u9762\u8FD9\u4E9B\u518D\u53BB\u770B vue \u91CC\u7684\u6A21\u677F\u7F16\u8BD1\uFF0C\u4F60\u5C31\u80FD\u77E5\u9053\u5B83\u5230\u5E95\u662F\u600E\u4E48\u52A0\u8FDB\u53BB\u90A3\u4E9B\u8BED\u6CD5\u7CD6\u7684\u4E86\u3002\u8FD8\u6BD4\u5982\u5C0F\u7A0B\u5E8F\u4E2D\u7684\u5BCC\u6587\u672C\u89E3\u6790\uFF0C\u7279\u5B9A\u5E73\u53F0\u7684\u5C0F\u7A0B\u5E8F\u5B9E\u9645\u4E0A\u662F\u4E0D\u80FD\u8BC6\u522B\u6D4F\u89C8\u5668\u91CC\u7684 html \u7684\uFF0C\u90A3\u6211\u4EEC\u5C31\u9700\u8981\u5148\u5C06 html \u901A\u8FC7\u72B6\u6001\u673A\u8F6C\u6210 AST\uFF0C\u7136\u540E\u518D\u6309\u7167\u5C0F\u7A0B\u5E8F\u7684\u8BED\u6CD5\u6765\u8FDB\u884C\u7279\u5B9A\u7684\u8F6C\u6362\u3002</p>`,27);function t(e,o){return p}var r=s(a,[["render",t]]);export{r as default};
